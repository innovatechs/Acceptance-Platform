# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
name: $(TeamProject).$(Build.DefinitionName).$(BuildID).$(Rev:.rr)
trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo Acceptance Platform Build
  displayName: 'Start'

- script: |
    ls -al $(Pipeline.Workspace)
    cd deployment/static/opt/gluu/jetty/oxauth/custom
    tar -czvf custom.tgz *
    mv custom.tgz $(Pipeline.Workspace)/s/deployment/static/opt/dist/signincanada
    cd $(Pipeline.Workspace)
    ls -al s/deployment/static/opt/dist/signincanada
    tar -tvf s/deployment/static/opt/dist/signincanada/custom.tgz
  displayName: 'Packaging UI'
  continueOnError: false

- script: |
    echo 'Downloading AppInsights SDK'
    wget https://github.com/microsoft/ApplicationInsights-Java/releases/download/2.5.1/applicationinsights-web-auto-2.5.1.jar
    mv applicationinsights-web-auto-2.5.1.jar deployment/static/opt/dist/signincanada
    echo 'Downloading AppInsights Agent'
    wget https://github.com/microsoft/ApplicationInsights-Java/releases/download/2.5.1/applicationinsights-agent-2.5.1.jar
    mv applicationinsights-agent-2.5.1.jar deployment/static/opt/azure
    ls -al 
  displayName: 'Downloading AppInsights'
  continueOnError: false

- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'specific'
    project: '7302639f-e704-47c3-9557-99b4e04a75bc'
    definition: '285'
    buildVersionToDownload: 'latest'
    artifactName: 'gluu-passport'
    itemPattern: |
      **/package/passport*.gz
      **/package/passport.tgz
    targetPath: '$(Pipeline.Workspace)/s/deployment/static/opt/dist/gluu'
  displayName: 'Download gluu binaries'
  continueOnError: false

- script: |
    cd deployment/static/opt/dist/gluu
    mv package/*gz .
    rm -rf package
    ls -al 
    chmod +x /opt/dist/signincanada/postinstall.sh
    cd $(Pipeline.Workspace)/s
  displayName: 'Moving gluu packages'
  continueOnError: true

- script: |
    cd deployment/static/
    echo 'packaging tarball'
    tar -czvf SIC-AP-0.0.$(Rev:.rr).tgz *
    mv SIC-AP-0.0.$(Rev:.rr).tgz $(Pipeline.Workspace) 
  displayName: 'Packaging tarball'
  continueOnError: true

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    artifact: 'accpetance-platform'
    publishLocation: 'pipeline'